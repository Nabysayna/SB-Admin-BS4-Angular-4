{"version":3,"sources":["C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form-routing.module.ts","C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.html","C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.scss","C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.ts","C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.module.ts"],"names":[],"mappings":"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","file":"15.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormComponent } from './form.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: FormComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form-routing.module.ts","module.exports = \" <div id=\\\"page-wrapper\\\" [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Nouveau Client'\\\" [icon]=\\\"'fa-table'\\\"></app-page-header>\\r\\n    <div class=\\\"row\\\" >\\r\\n        <div class=\\\"col-sm-12\\\" *ngIf=\\\"regionsactivites\\\">\\r\\n              <div class=\\\"col-sm-12 col-xs-12\\\" >\\r\\n                  <h5 style=\\\"margin-top: 2rem\\\">Point</h5>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"client.nompoint\\\"   name=\\\"nompoint\\\" id=\\\"nompoint\\\" class=\\\"form-control\\\"  placeholder=\\\"Nom Point\\\" required>\\r\\n                  <a class=\\\"btn btn-outline-primary\\\" style=\\\"margin-bottom: 1rem;\\\" (click)=\\\"isAdressepoint = !isAdressepoint\\\"\\r\\n                     [attr.aria-expanded]=\\\"!isAdressepoint\\\" aria-controls=\\\"collapseExamples\\\"> Adresse point\\r\\n                  </a>\\r\\n                  <div id=\\\"collapseExamples\\\" [ngbCollapse]=\\\"isAdressepoint\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-block\\\">\\r\\n                              <label>Région</label>\\r\\n                              <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletpoint.regionpoint\\\" (change)=\\\"selectRegionPoint()\\\">\\r\\n                                  <option>--Choix région--</option>\\r\\n                                  <option  *ngFor=\\\"let region of regionsactivites.regions\\\">{{region.nom}}</option>\\r\\n                                  <option  >autre</option>\\r\\n                              </select>\\r\\n                              <label>Zones</label>\\r\\n                              <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletpoint.zonepoint\\\" (change)=\\\"selectZonePoint()\\\">\\r\\n                                  <option>--Choix zone--</option>\\r\\n                                  <option  *ngFor=\\\"let zone of zonespoints\\\">{{zone.nom}}</option>\\r\\n                                  <option>autre</option>\\r\\n                              </select>\\r\\n                              <label>Sous-zones</label>\\r\\n                              <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletpoint.souszonepoint\\\">\\r\\n                                  <option>--Choix sous zone--</option>\\r\\n                                  <option  *ngFor=\\\"let souszone of souszonespoints\\\">{{souszone.nom}}</option>\\r\\n                                  <option>autre</option>\\r\\n                              </select>\\r\\n                              <label>Adresse exacte</label>\\r\\n                              <input type=\\\"text\\\" [(ngModel)]=\\\"client.adressecompletpoint.adressepoint\\\"   name=\\\"adressepoint\\\" id=\\\"adressepoint\\\" class=\\\"form-control\\\"  placeholder=\\\"adresse exacte\\\" required>\\r\\n                              <label>Code postal</label>\\r\\n                              <input type=\\\"number\\\" [(ngModel)]=\\\"client.adressecompletpoint.codepostalpoint\\\"   name=\\\"codepostalpoint\\\" id=\\\"codepostalpoint\\\" class=\\\"form-control\\\"  placeholder=\\\"code postal point\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                  <button (click)=\\\"coordonneesgeospatialespoint()\\\" *ngIf=\\\"client.adressecompletpoint.geospatialpoint.latitude==0\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\">\\r\\n                                      <i class=\\\"fa fa-search\\\"></i>Coordonnées Géospatiales du point\\r\\n                                  </button>\\r\\n                                  <strong *ngIf=\\\"client.adressecompletpoint.geospatialpoint.latitude!=0\\\" style=\\\"background-color: greenyellow\\\"><i class=\\\"fa fa-check\\\"></i>Coordonnées Géospatiales du point récupèré avec succés\\r\\n                                  </strong>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <h5 style=\\\"margin-top: 2rem\\\">Le gérant</h5>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"client.prenomgerant\\\"   name=\\\"prenomgerant\\\" id=\\\"prenomgerant\\\" class=\\\"form-control\\\"  placeholder=\\\"prénom gérant\\\" required>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"client.nomgerant\\\"   name=\\\"nomgerant\\\" id=\\\"nomgerant\\\" class=\\\"form-control\\\" placeholder=\\\"nom gérant\\\" required>\\r\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"client.telephonegerant\\\"   name=\\\"telephonegerant\\\" id=\\\"telephonegerant\\\" class=\\\"form-control\\\" placeholder=\\\"téléphone gérant\\\" required>\\r\\n                  <input type=\\\"email\\\" [(ngModel)]=\\\"client.emailgerant\\\"   name=\\\"emailgerant\\\" id=\\\"emailgerant\\\" class=\\\"form-control\\\" placeholder=\\\"email gérant\\\" required>\\r\\n                  <h5 style=\\\"margin-top: 2rem\\\">Le propriétaire <small>(si pas connu, mettre les infos du gérant à la place)</small></h5>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"client.prenomproprietaire\\\"   name=\\\"prenomproprietaire\\\" id=\\\"prenomproprietaire\\\" class=\\\"form-control\\\"  placeholder=\\\"prénom propiétaire\\\" required>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"client.nomproprietaire\\\"   name=\\\"nomproprietaire\\\" id=\\\"nomproprietaire\\\" class=\\\"form-control\\\" placeholder=\\\"nom propiétaire\\\" required>\\r\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"client.telephoneproprietaire\\\"   name=\\\"telephoneproprietaire\\\" id=\\\"telephoneproprietaire\\\" class=\\\"form-control\\\" placeholder=\\\"téléphone propiétaire\\\" required>\\r\\n                  <input type=\\\"email\\\" [(ngModel)]=\\\"client.emailproprietaire\\\"   name=\\\"emailpropietaire\\\" id=\\\"emailpropietaire\\\" class=\\\"form-control\\\" placeholder=\\\"email propiétaire\\\" required>\\r\\n                  <!--<a style=\\\"margin-bottom: 1rem;\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isAdresseproprio = !isAdresseproprio\\\"\\r\\n                      [attr.aria-expanded]=\\\"!isAdresseproprio\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                      Adresse propriétaire\\r\\n                  </a>-->\\r\\n                  <div id=\\\"collapseExample\\\" [ngbCollapse]=\\\"isAdresseproprio\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-block\\\">\\r\\n                                <label>Région</label>\\r\\n                                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletproprietaire.regionproprietaire\\\" (change)=\\\"selectRegionProprietaire()\\\">\\r\\n                                    <option>--Choix région--</option>\\r\\n                                    <option  *ngFor=\\\"let region of regionsactivites.regions\\\">{{region.nom}}</option>\\r\\n                                    <option  >autre</option>\\r\\n                                </select>\\r\\n                                <label>Zones</label>\\r\\n                                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletproprietaire.zoneproprietaire\\\" (change)=\\\"selectZoneProprietaire()\\\">\\r\\n                                    <option>--Choix zone--</option>\\r\\n                                    <option  *ngFor=\\\"let zone of zonespropietaires\\\">{{zone.nom}}</option>\\r\\n                                    <option>autre</option>\\r\\n                                </select>\\r\\n                                <label>Sous zones</label>\\r\\n                                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"client.adressecompletproprietaire.souszoneproprietaire\\\">\\r\\n                                    <option>&#45;&#45;Choix sous zone&#45;&#45;</option>\\r\\n                                    <option  *ngFor=\\\"let souszone of souszonespropietaires\\\">{{souszone.nom}}</option>\\r\\n                                    <option>autre</option>\\r\\n                                </select>\\r\\n                                <label>Adresse exacte</label>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"client.adressecompletproprietaire.adresseproprietaire\\\" name=\\\"adresseproprietaire\\\" id=\\\"adresseproprietaire\\\" class=\\\"form-control\\\"  placeholder=\\\"adresse exacte\\\" required>\\r\\n                                <label>Code postal</label>\\r\\n                                <input type=\\\"number\\\" [(ngModel)]=\\\"client.adressecompletproprietaire.codepostalproprietaire\\\" name=\\\"codepostalproprietaire\\\" id=\\\"codepostalproprietaire\\\" class=\\\"form-control\\\"  placeholder=\\\"code postal propriétaire\\\">\\r\\n                                <button (click)=\\\"coordonneesgeospatialesproprietaire()\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\">\\r\\n                                    <i class=\\\"fa fa-search\\\"></i>Recherche Coordonnées Géospatiales du proprietaire\\r\\n                                </button>\\r\\n                            </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <h5 style=\\\"margin-top: 2rem\\\">Types d'activités</h5>\\r\\n                  <div class=\\\"row\\\">\\r\\n                        <div  *ngFor=\\\"let option of options\\\"  class=\\\"col-sm-6 col-xs-12\\\">\\r\\n                          <input type=\\\"checkbox\\\" name=\\\"options\\\" value=\\\"{{option.value}}\\\"\\r\\n                                 [(ngModel)]=\\\"option.checked\\\" (change)=\\\"updateCheckedOptions()\\\"\\r\\n                          />\\r\\n                          {{option.name}}\\r\\n                        </div>\\r\\n                  </div>\\r\\n                  <button style=\\\"margin-top:4rem; margin-bottom: 1rem;\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"getAllServices()\\\"\\r\\n                        [attr.aria-expanded]=\\\"!isSelect\\\" aria-controls=\\\"collapseExampl\\\"> Prospection\\r\\n                  </button>\\r\\n                  <div id=\\\"collapseExampl\\\" [ngbCollapse]=\\\"isSelect\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                          <div class=\\\"col-xs-12 col-sm-12\\\">\\r\\n\\r\\n                              <div class=\\\"row table-responsive\\\">\\r\\n                                  <table class=\\\"table table-hover\\\">\\r\\n                                      <thead>\\r\\n                                      <tr>\\r\\n                                          <th>Réponse</th>\\r\\n                                          <th *ngFor=\\\"let item of possibleAnswers\\\">{{item.reponse}}</th>\\r\\n                                      </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody *ngIf=\\\"allServices\\\">\\r\\n                                      <tr *ngFor=\\\"let service of allServices ; let i = index \\\">\\r\\n                                          <td>{{service.nom}}</td>\\r\\n                                          <td *ngFor=\\\"let item of possibleAnswers\\\"><input type=\\\"radio\\\" value=\\\"{{item.reponse}}\\\" name=\\\"{{service.nom}}\\\" [(ngModel)]=\\\"reponsesProspect[i]\\\"/></td>\\r\\n                                      </tr>\\r\\n                                      </tbody>\\r\\n                                  </table>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <button style=\\\"margin-top:4rem; margin-bottom: 1rem;\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isUploadfile = !isUploadfile\\\"\\r\\n                        [attr.aria-expanded]=\\\"!isUploadfile\\\" aria-controls=\\\"collapseExamplees\\\">\\r\\n                        Recueille de documents\\r\\n                  </button>\\r\\n                  <div id=\\\"collapseExamplees\\\" [ngbCollapse]=\\\"isUploadfile\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-block\\\">\\r\\n                           <fieldset class=\\\"form-group\\\" _ngcontent-c25=\\\"\\\" style=\\\"margin-top: 1rem;\\\">\\r\\n                                <label>Libellé</label><select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"uploadedFileType\\\">\\r\\n                                        <option>--Choisir le type de pièce--</option>\\r\\n                                        <option value=\\\"cni\\\">CIN</option>\\r\\n                                        <option value=\\\"passport\\\">Passport</option>\\r\\n                                        <option value=\\\"carte consulaire\\\">Carte Consulaire</option>\\r\\n                                        <option value=\\\"autre\\\"> Autres Pièces... </option>\\r\\n                                        </select>\\r\\n                                <label class=\\\"ng-tns-c25-10\\\" for=\\\"exampleInputFile\\\" _ngcontent-c25=\\\"\\\">Choisir un fichier</label>\\r\\n                                <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"exampleInputFile\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Uploader Image\\\" accept=\\\".pdf,.docx,.png,.jpg\\\">\\r\\n\\r\\n                            </fieldset>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                   </div>\\r\\n                   <div>\\r\\n                       <label>Notez le point</label>\\r\\n                        <p>\\r\\n                          <span *ngFor=\\\"let option of rating\\\"><i [ngClass]=\\\"{'fa': true, 'fa-star-o': !option.checked, 'fa-star': option.checked}\\\" aria-hidden=\\\"true\\\" (click)=\\\"avoter(option.indice)\\\"></i></span>\\r\\n                        </p>\\r\\n                  </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-top: 4rem; margin-bottom: 4rem\\\" class=\\\"text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\r\\n                (click)=\\\"validernewclient()\\\"\\r\\n                [disabled]=\\\"!client.nompoint || !client.telephonegerant || !client.telephoneproprietaire ||\\r\\n                !client.adressecompletpoint.souszonepoint || !client.adressecompletpoint.adressepoint\\\"\\r\\n        > Enregistrer le nouveau client</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.html\n// module id = ../../../../../src/app/layout/form/form.component.html\n// module chunks = 15","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-control {\\n  margin-bottom: 1rem; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.scss\n// module id = ../../../../../src/app/layout/form/form.component.scss\n// module chunks = 15","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport {UtilService} from \"../../services/util.service\";\r\nimport {AssignationSuiviService} from \"../../services/assignation-suivi.service\";\r\nimport { Http, RequestOptions, RequestMethod, Headers  } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport {Location} from '@angular/common';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-form',\r\n    templateUrl: './form.component.html',\r\n    styleUrls: ['./form.component.scss'],\r\n    animations: [routerTransition()],\r\n    providers: [UtilService, AssignationSuiviService]\r\n})\r\nexport class FormComponent implements OnInit {\r\n\tfakevalues = true ;\r\n\tpublic isAdresseproprio=true;\r\n\tpublic isAdressepoint=true;\r\n\tpublic isUploadfile=true;\r\n\r\n    public rowsOnPage = 5;\r\n    public sortBy = \"service\";\r\n    public sortOrder = \"asc\";\r\n    allServices : any[] = [] ;\r\n    reponsesProspect : string[] = [];\r\n    uploadedFileType : string ;\r\n\r\n    regionsactivites:{activites:any[],regions:any[]};\r\n\tpublic isSelect=true;\r\n\r\n    zonespoints:any[];\r\n    zonespropietaires:any[];\r\n    souszonespoints:any[];\r\n    souszonespropietaires:any[];\r\n\r\n    client: any = {\r\n        nompoint:'',\r\n        adressecompletpoint:{\r\n            regionpoint:'--Choix région--',\r\n            zonepoint:'--Choix zone--',\r\n            souszonepoint:'--Choix sous zone--',\r\n            adressepoint:'',\r\n            codepostalpoint:0,\r\n            geospatialpoint:{latitude:0, longitude:0},\r\n        },\r\n        typeactivite:[],\r\n        avissurpoint:0,\r\n\r\n\r\n        nomgerant:'',\r\n        prenomgerant:'',\r\n        telephonegerant:'',\r\n        emailgerant:'',\r\n\r\n\r\n        nomproprietaire:'',\r\n        prenomproprietaire:'',\r\n        telephoneproprietaire:'',\r\n        emailproprietaire:'',\r\n        adressecompletproprietaire:{\r\n            regionproprietaire:'--Choix région--',\r\n            zoneproprietaire:'--Choix zone--',\r\n            souszoneproprietaire:'--Choix sous zone--',\r\n            adresseproprietaire:'',\r\n            codepostalproprietaire:0,\r\n            geospatialproprietaire:{latitude:0,longitude:0},\r\n        },\r\n        reponsesProspect : [],\r\n        piecesFournies : []\r\n    };\r\n\r\n    rating = [\r\n        {indice:0, checked:false},\r\n        {indice:1, checked:false},\r\n        {indice:2, checked:false},\r\n        {indice:3, checked:false},\r\n        {indice:4, checked:false},\r\n    ];\r\n\r\n    options:any[] = [];\r\n\r\n    uploadFile: any;\r\n    newImage : any ;\r\n\r\n\r\n    constructor(public router: Router, private _location: Location, private _utilService: UtilService, private _assignationsuiviService:AssignationSuiviService, private http: Http) { }\r\n\r\n    ngOnInit() {\r\n        this.getRegionActivite();\r\n    }\r\n\r\n    getRegionActivite(){\r\n        this._utilService.getRegionActivite()\r\n            .subscribe(\r\n                data => {\r\n                    console.log(data);\r\n                    this.regionsactivites = data;\r\n                    this.options = this.regionsactivites.activites.map(function(type) {\r\n                        return {name:type.activite, value:type.id, checked:false};\r\n                    });\r\n                },\r\n                error => alert(error),\r\n                () => console.log(this.regionsactivites)\r\n            );\r\n    }\r\n\r\n    selectRegionPoint(){\r\n        this.client.adressecompletpoint.zonepoint = '--Choix zone--';\r\n        this.client.adressecompletpoint.souszonepoint = '--Choix sous zone--';\r\n        this._utilService.getZoneByRegion(this.client.adressecompletpoint.regionpoint)\r\n            .subscribe(\r\n                data => this.zonespoints = data,\r\n                error => alert(error),\r\n                () => console.log(this.zonespoints)\r\n            );\r\n    }\r\n\r\n    selectRegionProprietaire(){\r\n        this.client.adressecompletproprietaire.zoneproprietaire = '--Choix zone--';\r\n        this.client.adressecompletproprietaire.souszoneproprietaire = '--Choix sous zone--';\r\n        this._utilService.getZoneByRegion(this.client.adressecompletproprietaire.regionproprietaire)\r\n            .subscribe(\r\n                data => this.zonespropietaires = data,\r\n                error => alert(error),\r\n                () => console.log(this.zonespropietaires)\r\n            );\r\n    }\r\n\r\n    selectZonePoint(){\r\n        this._utilService.getSouszoneByZone(this.client.adressecompletpoint.zonepoint)\r\n            .subscribe(\r\n                data => this.souszonespoints = data,\r\n                error => alert(error),\r\n                () => console.log(this.souszonespoints)\r\n            );\r\n    }\r\n\r\n    selectZoneProprietaire(){\r\n        this._utilService.getSouszoneByZone(this.client.adressecompletproprietaire.zoneproprietaire)\r\n            .subscribe(\r\n                data => this.souszonespropietaires = data,\r\n                error => alert(error),\r\n                () => console.log(this.souszonespropietaires)\r\n            );\r\n    }\r\n\r\n    getAllServices(){\r\n        this._utilService.getServices()\r\n            .subscribe(\r\n                data => this.allServices = data,\r\n                error => alert(error),\r\n                () => {\r\n                        this.isSelect = !this.isSelect;\r\n                        for(let i=0 ; i<this.allServices.length ; i++){\r\n                            this.reponsesProspect.push(\"\") ;\r\n                        }\r\n                      }\r\n            );\r\n    }\r\n\r\n    avoter(index:number): void{\r\n        if(  ( index + 1 == this.rating.length ) && ( this.rating[index].checked == true) ) {\r\n            this.rating[index].checked = false;\r\n        }\r\n        else {\r\n            for (var i = 0; i<this.rating.length; i++) {\r\n                if(i < index) {\r\n                    this.rating[i].checked = true;\r\n                }\r\n                else if(i == index) {\r\n                    if( (this.rating[i].checked == true) && (this.rating[i+1].checked == false) ){\r\n                        this.rating[i].checked = false;\r\n                    }\r\n                    else {\r\n                        this.rating[i].checked = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this.rating[i].checked = false;\r\n                }\r\n            }\r\n        }\r\n        let arrayRating = this.rating.filter(opt => opt.checked);\r\n        this.client.avissurpoint = arrayRating.length;\r\n    }\r\n\r\n    coordonneesgeospatialespoint(){\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.client.adressecompletpoint.geospatialpoint.longitude = position.coords.longitude;\r\n                this.client.adressecompletpoint.geospatialpoint.latitude = position.coords.latitude;\r\n                console.log('test 1');\r\n                console.log(this.client.adressecompletpoint.geospatialpoint);\r\n            });\r\n        }\r\n    }\r\n\r\n    coordonneesgeospatialesproprietaire(){\r\n        if(navigator.geolocation){\r\n            console.log(\"YES!\") ;\r\n            let geospatialproprietaire = {latitude:0,longitude:0};\r\n            navigator.geolocation.getCurrentPosition(function(position){\r\n                geospatialproprietaire.longitude = position.coords.longitude;\r\n                geospatialproprietaire.latitude = position.coords.latitude;\r\n                sessionStorage.setItem('positionproprietaire',JSON.stringify(geospatialproprietaire)) ;\r\n            }) ;\r\n        }\r\n    }\r\n\r\n    get selectedOptions() {\r\n        return this.options\r\n            .filter(opt => opt.checked)\r\n            .map(opt => opt.value)\r\n    };\r\n\r\n    updateCheckedOptions(): void{\r\n        let activites = this.regionsactivites.activites;\r\n        this.client.typeactivite = this.selectedOptions.map(function(option) {\r\n            return activites[Number(option)-1].activite;\r\n        });\r\n        console.log(this.client.typeactivite);\r\n    }\r\n\r\n    validernewclient(){\r\n        this.client.adressecompletproprietaire.geospatialproprietaire = JSON.parse(sessionStorage.getItem('positionproprietaire'));\r\n\r\n        for(let i = 0 ; i<this.allServices.length ; i++){\r\n            this.client.reponsesProspect.push( this.allServices[i].nom+\"#\"+this.reponsesProspect[i] ) ;\r\n        }\r\n        console.log(this.client);\r\n\r\n        this._utilService.insertPoint(this.client)\r\n            .subscribe(\r\n                data => {\r\n                    console.log(data);\r\n                    this.router.navigate(['/dashboard']);\r\n                },\r\n                error => alert(error),\r\n                () => console.log('insertPoint')\r\n        );\r\n    }\r\n\r\n  apiEndPoint = 'http://abonnement.bbstvnet.com/crmbbs/server-backend-upload/index.php' ;\r\n\r\n  fileChange(event) {\r\n      let fileList: FileList = event.target.files;\r\n      if(fileList.length > 0) {\r\n          let file: File = fileList[0];\r\n          let formData:FormData = new FormData();\r\n          formData.append('file', file, file.name);\r\n          let headers = new Headers();\r\n\r\n          headers.append('Accept', 'application/json');\r\n          let options = new RequestOptions({\r\n                              headers: headers\r\n                            });\r\n\r\n          this.http.post(`${this.apiEndPoint}`, formData, options)\r\n              .map(res => res.json())\r\n              .catch(error => Observable.throw(error))\r\n              .subscribe(\r\n                  data => { console.log(\"Retour uploader \"+data.generatedName) ;\r\n                           let newData = data;\r\n                           this.uploadFile = newData;\r\n                           this.newImage = this.uploadFile.generatedName ;\r\n                           this.client.piecesFournies.push(this.uploadedFileType+\"#\"+this.newImage) ;\r\n                        },\r\n                  error => console.log(error)\r\n              )\r\n      }\r\n  }\r\n\r\n\r\n\r\n    public possibleAnswers = [\r\n      {\r\n        \"reponse\": \"A Déjà Souscri\"\r\n      },\r\n      {\r\n        \"reponse\": \"Souscrit Maintenant\"\r\n      },\r\n      {\r\n        \"reponse\": \"Intéressé\"\r\n      },\r\n      {\r\n        \"reponse\": \"Pas Pour le Moment\"\r\n      },\r\n      {\r\n        \"reponse\": \"Impossible\"\r\n      },\r\n\r\n    ];\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport  { FormsModule} from '@angular/forms' ;\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FormRoutingModule } from './form-routing.module';\r\nimport { FormComponent } from './form.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport {DataTableModule} from \"angular2-datatable\";\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FormRoutingModule,\r\n        PageHeaderModule,\r\n        DataTableModule,\r\n        NgbModule\r\n    ],\r\n    declarations: [FormComponent]\r\n})\r\nexport class FormModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp/www/SB-Admin-BS4-Angular-4/src/app/layout/form/form.module.ts"],"sourceRoot":"webpack:///"}